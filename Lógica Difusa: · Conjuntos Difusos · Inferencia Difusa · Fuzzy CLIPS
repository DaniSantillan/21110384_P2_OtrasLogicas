import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

# Crear variables de entrada y salida difusas
temperatura = ctrl.Antecedent(np.arange(0, 101, 1), 'temperatura')
velocidad = ctrl.Consequent(np.arange(0, 101, 1), 'velocidad')

# Definir funciones de membresía para la temperatura
temperatura['fria'] = fuzz.trimf(temperatura.universe, [0, 0, 50])
temperatura['calida'] = fuzz.trimf(temperatura.universe, [0, 50, 100])

# Definir funciones de membresía para la velocidad
velocidad['baja'] = fuzz.trimf(velocidad.universe, [0, 0, 50])
velocidad['media'] = fuzz.trimf(velocidad.universe, [0, 50, 100])
velocidad['alta'] = fuzz.trimf(velocidad.universe, [50, 100, 100])

# Visualizar los conjuntos difusos
temperatura.view()
velocidad.view()

# Crear reglas difusas
regla1 = ctrl.Rule(temperatura['fria'], velocidad['alta'])
regla2 = ctrl.Rule(temperatura['calida'], velocidad['baja'])

# Crear sistema de control difuso
sistema_control = ctrl.ControlSystem([regla1, regla2])
controlador = ctrl.ControlSystemSimulation(sistema_control)

# Simular el sistema con una temperatura de 30 grados
controlador.input['temperatura'] = 30
controlador.compute()

# Obtener el resultado de la velocidad
print("Velocidad:", controlador.output['velocidad'])

# Visualizar la salida difusa
velocidad.view(sim=controlador)
